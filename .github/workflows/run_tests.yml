name: Run Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-mock httpx freezegun

    - name: Run tests and Generate Report
      run: |
        # Add the --junitxml flag to generate the report file
        pytest --junitxml=report.xml tests/
      env:
        OPENAI_API_KEY: "dummy_key_for_tests"
        POSTGRES_HOST: "localhost"
        POSTGRES_PORT: "5333"
        POSTGRES_DB: "testdb"
        POSTGRES_USER: "testuser"
        POSTGRES_PASSWORD: "testpass"
        MOCK_API_BASE_URL: "http://dummy-mock-api.local"
        # Add other required variables from .env.example if necessary for settings to load

    - name: Publish Test Report
      uses: dorny/test-reporter@v1 # Action to publish test results
      # Run this step even if previous steps fail (e.g., tests failed)
      # to ensure the report is always published.
      if: success() || failure()
      with:
        name: Pytest Results (${{ matrix.python-version }}) # Name of the Check Run
        path: report.xml             # Path to the generated JUnit XML report
        reporter: pytest-junit       # Specify the reporter type
        # Optional: Set to true to fail the workflow if test failures are found
        # fail-on-error: 'true'